{"mappings":"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","sources":["src/scripts.js"],"sourcesContent":["\r\n// create scene\r\nconst scene = new THREE.Scene();\r\n\r\n\r\n// camera\r\nconst camera = new THREE.PerspectiveCamera(\r\n    75, window.innerWidth / window.innerHeight, 0.1, 1000 )\r\ncamera.position.z = -2.5;\r\ncamera.position.x = -5\r\n\r\n//lighting\r\nconst ambient = new THREE.AmbientLight(0xffffff);\r\nscene.add(ambient);\r\n\r\n//renderer\r\nconst renderer = new THREE.WebGLRenderer();\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ndomcument.body.appendChild(renderer.domElement);\r\n\r\nlet loadingProperly = 0;\r\nconst loading = () => loadingProperly++;\r\nconst ENV_URL = 'images/stars.jpg';\r\n\r\n    //surfacte properties (props)\r\nconst reflectionCube = new THREE.TextureLoader().load(ENV_URL, loading);\r\n    //refraction of water bubble \r\nconst refractionCube = new THREE.TextureLoader().load(ENV_URL, loading);\r\nreflectionCube.mapping = THREE.EquirectanglearReflectionMapping;\r\nrefractionCube.mapping = THREE.EquirectanglearRefractionMapping;\r\n\r\nscene.background = reflectionCube;\r\nscene.environment = refractionCube;\r\n\r\n\r\n//meshes and geometry use \r\nconst geometry = new THREE.SphereGeometry(2, 128, 128 );\r\nconst base = geometry.attributes.position.array.slice();\r\n\r\n//material applied\r\nconst reflectionMaterial = new THREE.MeshPysicalMaterial({\r\n    color: 'red', //0xc3e4f9\r\n    envMap: refractionCube,\r\n    metalness: 1,\r\n    reflectivity: 0,\r\n    refractionRation: .1,\r\n    roughness: 0,\r\n    side: THREE.DoubelSide\r\n});\r\n\r\n\r\nconst refractionMatrial = new THREE.MeshPysicalMaterial({\r\n    color: 'red', //0xc3e4f9\r\n    envMap: reflectionCube,\r\n    metalness: 1,\r\n    reflectivity: 0,\r\n    refractionRation: .1,\r\n    roughness: 0,\r\n    side: THREE.DoubelSide,\r\n    transmission: 1,\r\n    transparent: true\r\n});\r\n\r\nconst refractionShere = new THREE.Mesh(geometry, refractionMatrial);\r\nconst reflectionShere = new THREE.Mesh(geometry, reflectionMaterial);\r\n\r\nconst sphere = new THREE.Object3D();\r\nsphere.add(refractionShere);\r\nsphere.add(reflectionShere);\r\n\r\nscene.add(sphere);\r\nsphere.lookAt(camera.position);\r\ncamera.lookAt(sphere.position);\r\n\r\ncontrols - new THREE.OrbitControls(camera, renderer.domElement);\r\ncontrols.enableDamping = true; \r\n\r\nconst animate = function(dt) {\r\n    requestAnimationFrame(animate);\r\n    controls.update();\r\n    if (loadingProperly !== 2 ) return; \r\n\r\n    //bubble geometry rendering\r\n    geometry.attributes.position.array.forEach((val, i, arr ) => {\r\n        const place = i % 3;\r\n\r\n        if (place === 0 ) {\r\n            arr[1] = base[i] + Math.sin(base[i + 1 ] * 3 + dt * .002) * .1;   \r\n        }\r\n        if (place === 0 ) {\r\n            arr[1] = base[i] + Math.sin(base[i - 1 ] * 5 + dt * .002) * .1;\r\n        }\r\n        if (place === 0 ) {\r\n        arr[1] = base[i] + Math.sin(base[i + 1 ] * 3 + dt * .002) * .1;\r\n        }\r\n    });\r\n\r\n    //updat bubble positions and window resize\r\n    geometry.computerVertexNormals();\r\n    geometry.normalizeNormales();\r\n    geometry.attributes.position.needsUpdate = true; \r\n\r\n    // function windowResize() {\r\n    //     camera.aspect = window.innerWidth / window.innerHeight;\r\n    //     camera.updateProjectionMatrix();\r\n    //     renderer.setSize(window.innerWidth, window.innerHeight);      \r\n    // }\r\n    // window.addEventListener('resize', windowResize, false);\r\n\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    camera.aspect = window.innerWidth / window.innerHeight;\r\n    camera.updateProjectionMatrix();\r\n    renderer.render(scene, camera);\r\n    \r\n}\r\n\r\nanimate();\r\n\r\n\r\n"],"names":[],"version":3,"file":"index.f68744d1.js.map","sourceRoot":"/__parcel_source_root/"}